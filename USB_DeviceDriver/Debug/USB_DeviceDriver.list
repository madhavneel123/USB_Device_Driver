
USB_DeviceDriver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e0  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a4  080003ac  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a4  080003a4  000103ac  2**0
                  CONTENTS
  4 .ARM          00000000  080003a4  080003a4  000103ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a4  080003ac  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a4  080003a4  000103a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003ac  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003ac  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000103ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000066d  00000000  00000000  000103dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000197  00000000  00000000  00010a49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a0  00000000  00000000  00010be0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  00010c80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018b96  00000000  00000000  00010ce8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fd6  00000000  00000000  0002987e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a9c1  00000000  00000000  0002a854  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b5215  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  000b5268  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800038c 	.word	0x0800038c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	0800038c 	.word	0x0800038c

08000204 <main>:
 */

#include "usbdd_framework.h"

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
    /* Loop forever */
	USB_Initialize();
 8000208:	f000 f868 	bl	80002dc <USB_Initialize>
	for(;;);
 800020c:	e7fe      	b.n	800020c <main+0x8>
	...

08000210 <USB_Init>:
 */

//USB_OTG_GlobalTypeDef
#include "usbdd_driver.h"
void USB_Init(void)
{
 8000210:	b480      	push	{r7}
 8000212:	af00      	add	r7, sp, #0
	//Enable Clock for AHB1 and GPIOB
	RCC-> AHB1ENR |= (1 << 1);
 8000214:	4b0e      	ldr	r3, [pc, #56]	; (8000250 <USB_Init+0x40>)
 8000216:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000218:	4a0d      	ldr	r2, [pc, #52]	; (8000250 <USB_Init+0x40>)
 800021a:	f043 0302 	orr.w	r3, r3, #2
 800021e:	6313      	str	r3, [r2, #48]	; 0x30

	//Set Alternate functionality mode
	GPIOB -> AFR[1] |= (0b1100 << 24);
 8000220:	4b0c      	ldr	r3, [pc, #48]	; (8000254 <USB_Init+0x44>)
 8000222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000224:	4a0b      	ldr	r2, [pc, #44]	; (8000254 <USB_Init+0x44>)
 8000226:	f043 6340 	orr.w	r3, r3, #201326592	; 0xc000000
 800022a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB -> AFR[1] |= (0b1100 << 28);
 800022c:	4b09      	ldr	r3, [pc, #36]	; (8000254 <USB_Init+0x44>)
 800022e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000230:	4a08      	ldr	r2, [pc, #32]	; (8000254 <USB_Init+0x44>)
 8000232:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8000236:	6253      	str	r3, [r2, #36]	; 0x24

	//Configure USB pins to work in alternate functionality mode
	GPIOB -> MODER |= (0b1010 << 28);
 8000238:	4b06      	ldr	r3, [pc, #24]	; (8000254 <USB_Init+0x44>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a05      	ldr	r2, [pc, #20]	; (8000254 <USB_Init+0x44>)
 800023e:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 8000242:	6013      	str	r3, [r2, #0]

}
 8000244:	bf00      	nop
 8000246:	46bd      	mov	sp, r7
 8000248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800024c:	4770      	bx	lr
 800024e:	bf00      	nop
 8000250:	40023800 	.word	0x40023800
 8000254:	40020400 	.word	0x40020400

08000258 <Core_Init>:

void Core_Init(void)
{
 8000258:	b480      	push	{r7}
 800025a:	af00      	add	r7, sp, #0
	//Enable clock for USB core
	RCC-> AHB1ENR |= (1 << 29);
 800025c:	4b14      	ldr	r3, [pc, #80]	; (80002b0 <Core_Init+0x58>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a13      	ldr	r2, [pc, #76]	; (80002b0 <Core_Init+0x58>)
 8000262:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000266:	6313      	str	r3, [r2, #48]	; 0x30

	//Configure the USB core to run in device mode and to use the embedded full speed PHY
	USB_OTG_HS -> GUSBCFG |= (1 << 6) | (0x09 << 10) | (1 << 30);
 8000268:	4b12      	ldr	r3, [pc, #72]	; (80002b4 <Core_Init+0x5c>)
 800026a:	68db      	ldr	r3, [r3, #12]
 800026c:	4a11      	ldr	r2, [pc, #68]	; (80002b4 <Core_Init+0x5c>)
 800026e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000272:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 8000276:	60d3      	str	r3, [r2, #12]

	//Enable VBUS sensing device
	USB_OTG_HS -> GCCFG |= (1 << 21);
 8000278:	4b0e      	ldr	r3, [pc, #56]	; (80002b4 <Core_Init+0x5c>)
 800027a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <Core_Init+0x5c>)
 800027e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000282:	6393      	str	r3, [r2, #56]	; 0x38

	//Un-mask the main USB core interrupts
	USB_OTG_HS -> GINTMSK |= (1 << 12) | (1 << 13) | (1 << 3) | (1 << 11) | (1 << 18) | (1 << 5) | (1 << 31);
 8000284:	4b0b      	ldr	r3, [pc, #44]	; (80002b4 <Core_Init+0x5c>)
 8000286:	699a      	ldr	r2, [r3, #24]
 8000288:	490a      	ldr	r1, [pc, #40]	; (80002b4 <Core_Init+0x5c>)
 800028a:	4b0b      	ldr	r3, [pc, #44]	; (80002b8 <Core_Init+0x60>)
 800028c:	4313      	orrs	r3, r2
 800028e:	618b      	str	r3, [r1, #24]

	//Clear all pending core interrupts
	USB_OTG_HS -> GINTSTS = 0xFFFFFFFF;
 8000290:	4b08      	ldr	r3, [pc, #32]	; (80002b4 <Core_Init+0x5c>)
 8000292:	f04f 32ff 	mov.w	r2, #4294967295
 8000296:	615a      	str	r2, [r3, #20]

	//Un-mask USB global interrupts
	USB_OTG_HS -> GAHBCFG |= (1 << 0);
 8000298:	4b06      	ldr	r3, [pc, #24]	; (80002b4 <Core_Init+0x5c>)
 800029a:	689b      	ldr	r3, [r3, #8]
 800029c:	4a05      	ldr	r2, [pc, #20]	; (80002b4 <Core_Init+0x5c>)
 800029e:	f043 0301 	orr.w	r3, r3, #1
 80002a2:	6093      	str	r3, [r2, #8]
}
 80002a4:	bf00      	nop
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop
 80002b0:	40023800 	.word	0x40023800
 80002b4:	40040000 	.word	0x40040000
 80002b8:	80043828 	.word	0x80043828

080002bc <Connect>:

void Connect(void)
{
 80002bc:	b480      	push	{r7}
 80002be:	af00      	add	r7, sp, #0
	USB_OTG_HS -> GCCFG |= (1 << 16);
 80002c0:	4b05      	ldr	r3, [pc, #20]	; (80002d8 <Connect+0x1c>)
 80002c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80002c4:	4a04      	ldr	r2, [pc, #16]	; (80002d8 <Connect+0x1c>)
 80002c6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80002ca:	6393      	str	r3, [r2, #56]	; 0x38
	//USB_OTG_DeviceTypeDef -> DCTL &= ~(1 << 1);
	//USB_OTG_HS_DEVICE
}
 80002cc:	bf00      	nop
 80002ce:	46bd      	mov	sp, r7
 80002d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	40040000 	.word	0x40040000

080002dc <USB_Initialize>:
 */

#include "usbdd_framework.h"

void USB_Initialize(void)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	af00      	add	r7, sp, #0
	USB_Init();
 80002e0:	f7ff ff96 	bl	8000210 <USB_Init>
	Core_Init();
 80002e4:	f7ff ffb8 	bl	8000258 <Core_Init>
	Connect();
 80002e8:	f7ff ffe8 	bl	80002bc <Connect>
}
 80002ec:	bf00      	nop
 80002ee:	bd80      	pop	{r7, pc}

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	; (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f8:	480c      	ldr	r0, [pc, #48]	; (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002fa:	490d      	ldr	r1, [pc, #52]	; (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002fc:	4a0d      	ldr	r2, [pc, #52]	; (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000300:	e002      	b.n	8000308 <LoopCopyDataInit>

08000302 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000302:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000304:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000306:	3304      	adds	r3, #4

08000308 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000308:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800030c:	d3f9      	bcc.n	8000302 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030e:	4a0a      	ldr	r2, [pc, #40]	; (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000310:	4c0a      	ldr	r4, [pc, #40]	; (800033c <LoopForever+0x16>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000314:	e001      	b.n	800031a <LoopFillZerobss>

08000316 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000316:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000318:	3204      	adds	r2, #4

0800031a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800031c:	d3fb      	bcc.n	8000316 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 f811 	bl	8000344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ff6f 	bl	8000204 <main>

08000326 <LoopForever>:

LoopForever:
    b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000334:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000338:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800033c:	2000001c 	.word	0x2000001c

08000340 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC_IRQHandler>
	...

08000344 <__libc_init_array>:
 8000344:	b570      	push	{r4, r5, r6, lr}
 8000346:	4d0d      	ldr	r5, [pc, #52]	; (800037c <__libc_init_array+0x38>)
 8000348:	4c0d      	ldr	r4, [pc, #52]	; (8000380 <__libc_init_array+0x3c>)
 800034a:	1b64      	subs	r4, r4, r5
 800034c:	10a4      	asrs	r4, r4, #2
 800034e:	2600      	movs	r6, #0
 8000350:	42a6      	cmp	r6, r4
 8000352:	d109      	bne.n	8000368 <__libc_init_array+0x24>
 8000354:	4d0b      	ldr	r5, [pc, #44]	; (8000384 <__libc_init_array+0x40>)
 8000356:	4c0c      	ldr	r4, [pc, #48]	; (8000388 <__libc_init_array+0x44>)
 8000358:	f000 f818 	bl	800038c <_init>
 800035c:	1b64      	subs	r4, r4, r5
 800035e:	10a4      	asrs	r4, r4, #2
 8000360:	2600      	movs	r6, #0
 8000362:	42a6      	cmp	r6, r4
 8000364:	d105      	bne.n	8000372 <__libc_init_array+0x2e>
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f855 3b04 	ldr.w	r3, [r5], #4
 800036c:	4798      	blx	r3
 800036e:	3601      	adds	r6, #1
 8000370:	e7ee      	b.n	8000350 <__libc_init_array+0xc>
 8000372:	f855 3b04 	ldr.w	r3, [r5], #4
 8000376:	4798      	blx	r3
 8000378:	3601      	adds	r6, #1
 800037a:	e7f2      	b.n	8000362 <__libc_init_array+0x1e>
 800037c:	080003a4 	.word	0x080003a4
 8000380:	080003a4 	.word	0x080003a4
 8000384:	080003a4 	.word	0x080003a4
 8000388:	080003a8 	.word	0x080003a8

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
